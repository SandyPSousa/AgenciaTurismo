// <auto-generated />
using System;
using AgenciaTurismo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaTurismo.Migrations
{
    [DbContext(typeof(AgenciaTurismoContext))]
    partial class AgenciaTurismoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgenciaTurismo.Models.CidadeDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PaisDestinoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaisDestinoId");

                    b.ToTable("CidadesDestino");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Cidade Maravilhosa",
                            Estado = "RJ",
                            Nome = "Rio de Janeiro",
                            PaisDestinoId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Capital financeira do Brasil",
                            Estado = "SP",
                            Nome = "São Paulo",
                            PaisDestinoId = 1
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "A cidade que nunca dorme",
                            Estado = "NY",
                            Nome = "New York",
                            PaisDestinoId = 2
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Cidade Luz",
                            Estado = "Île-de-France",
                            Nome = "Paris",
                            PaisDestinoId = 3
                        });
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PacoteTuristico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuracaoDias")
                        .HasColumnType("int");

                    b.Property<string>("Inclusoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PacotesTuristicos");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PacoteTuristicoDestino", b =>
                {
                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("CidadeDestinoId")
                        .HasColumnType("int");

                    b.Property<int>("OrdemVisita")
                        .HasColumnType("int");

                    b.HasKey("PacoteTuristicoId", "CidadeDestinoId");

                    b.HasIndex("CidadeDestinoId");

                    b.ToTable("PacoteTuristicoDestinos");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PaisDestino", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoISO")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Continente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PaisesDestino");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CodigoISO = "BR",
                            Continente = "América do Sul",
                            Nome = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            CodigoISO = "US",
                            Continente = "América do Norte",
                            Nome = "Estados Unidos"
                        },
                        new
                        {
                            Id = 3,
                            CodigoISO = "FR",
                            Continente = "Europa",
                            Nome = "França"
                        });
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataReserva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroPessoas")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PacoteTuristicoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("PacoteTuristicoId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.CidadeDestino", b =>
                {
                    b.HasOne("AgenciaTurismo.Models.PaisDestino", "PaisDestino")
                        .WithMany("Cidades")
                        .HasForeignKey("PaisDestinoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PaisDestino");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PacoteTuristicoDestino", b =>
                {
                    b.HasOne("AgenciaTurismo.Models.CidadeDestino", "CidadeDestino")
                        .WithMany("PacoteTuristicoDestinos")
                        .HasForeignKey("CidadeDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgenciaTurismo.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("PacoteTuristicoDestinos")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CidadeDestino");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Reserva", b =>
                {
                    b.HasOne("AgenciaTurismo.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AgenciaTurismo.Models.PacoteTuristico", "PacoteTuristico")
                        .WithMany("Reservas")
                        .HasForeignKey("PacoteTuristicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("PacoteTuristico");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.CidadeDestino", b =>
                {
                    b.Navigation("PacoteTuristicoDestinos");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PacoteTuristico", b =>
                {
                    b.Navigation("PacoteTuristicoDestinos");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("AgenciaTurismo.Models.PaisDestino", b =>
                {
                    b.Navigation("Cidades");
                });
#pragma warning restore 612, 618
        }
    }
}
